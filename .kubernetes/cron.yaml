---
# Service account the client will use to reset the deployment,
# by default the pods running inside the cluster can do no such things.
kind: ServiceAccount
apiVersion: v1
metadata:
  name: update-sitemap-xml
  namespace: enki
---
# allow getting status and patching only the one deployment you want
# to restart
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: update-sitemap-xml
  namespace: enki
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["*"] 

---
# bind the role to the service account
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: update-sitemap-xml
  namespace: enki
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: update-sitemap-xml
subjects:
  - kind: ServiceAccount
    name: update-sitemap-xml
    namespace: enki

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: update-sitemap-xml
  namespace: enki
spec:
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 0
  schedule: '30 04 * * *' # cron spec of time, here, 04.30am every day
  jobTemplate:
    spec:
      backoffLimit: 2 # this has very low chance of failing, as all this does
                      # is prompt kubernetes to schedule new replica set for
                      # the deployment
      template:
        spec:
          serviceAccountName: update-sitemap-xml
          restartPolicy: Never
          containers:
            - name: kubectl
              image: jaskaransarkaria/nodejs-kubectl

